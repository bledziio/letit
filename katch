_G.auto = false
_G.auto2 = false
local task_defer = task.defer
local pokemon = "Shadowpaw"
local fallbackPokemon = "Shadowclaw"
local maxCheckAttempts = 5
local maxFallbackAttempts = 3

local function invokeService(servicePath, args)
    game:GetService("ReplicatedStorage")
        :WaitForChild("Packages")
        :WaitForChild("_Index")
        :WaitForChild("sleitnick_knit@1.7.0")
        :WaitForChild("knit")
        :WaitForChild("Services")
        :WaitForChild("PlayerService")
        :WaitForChild("RF")
        :WaitForChild(servicePath)
        :InvokeServer(unpack(args))
end

local function tameCreature(creatureName)
    local argsStart = {
        [1] = creatureName,
        [2] = "#2"
    }
    game:GetService("ReplicatedStorage")
        :WaitForChild("Packages")
        :WaitForChild("_Index")
        :WaitForChild("sleitnick_knit@1.7.0")
        :WaitForChild("knit")
        :WaitForChild("Services")
        :WaitForChild("PlayerService")
        :WaitForChild("RF")
        :WaitForChild("RequestStartTameCreature")
        :InvokeServer(unpack(argsStart))

    local argsEnd = {
        [1] = creatureName
    }
    game:GetService("ReplicatedStorage")
        :WaitForChild("Packages")
        :WaitForChild("_Index")
        :WaitForChild("sleitnick_knit@1.7.0")
        :WaitForChild("knit")
        :WaitForChild("Services")
        :WaitForChild("PlayerService")
        :WaitForChild("RF")
        :WaitForChild("RequestEndTameCreature")
        :InvokeServer(unpack(argsEnd))
end

local function attackShadowclaw(creatureName)
    local argsStart = { [1] = 1 }
    game:GetService("ReplicatedStorage")
        :WaitForChild("Packages")
        :WaitForChild("_Index")
        :WaitForChild("sleitnick_knit@1.7.0")
        :WaitForChild("knit")
        :WaitForChild("Services")
        :WaitForChild("PlayerService")
        :WaitForChild("RF")
        :WaitForChild("AttackStart")
        :InvokeServer(unpack(argsStart))

    local argsHit = { [1] = 2, [2] = creatureName }
    game:GetService("ReplicatedStorage")
        :WaitForChild("Packages")
        :WaitForChild("_Index")
        :WaitForChild("sleitnick_knit@1.7.0")
        :WaitForChild("knit")
        :WaitForChild("Services")
        :WaitForChild("PlayerService")
        :WaitForChild("RF")
        :WaitForChild("OnPlayerHitObject")
        :InvokeServer(unpack(argsHit))

    local argsEnd = { [1] = 1 }
    game:GetService("ReplicatedStorage")
        :WaitForChild("Packages")
        :WaitForChild("_Index")
        :WaitForChild("sleitnick_knit@1.7.0")
        :WaitForChild("knit")
        :WaitForChild("Services")
        :WaitForChild("PlayerService")
        :WaitForChild("RF")
        :WaitForChild("AttackEnd")
        :InvokeServer(unpack(argsEnd))
end

local function checkForMoolet()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local humanoid = character:WaitForChild("Humanoid")
    local stopDistance = 5 -- Adjust this distance to stop before the object
    local checkAttempts = 0
    local fallbackAttempts = 0
    local usingFallback = false

    while _G.auto2 do
        local foundCreature = false
        local currentPokemon = usingFallback and fallbackPokemon or pokemon
        
        for _, creature in ipairs(workspace.Creatures:GetChildren()) do
            local playerNameText = creature:FindFirstChild("RootPart")
                and creature.RootPart:FindFirstChild("TitanNameplate")
                and creature.RootPart.TitanNameplate:FindFirstChild("InfoFrame")
                and creature.RootPart.TitanNameplate.InfoFrame:FindFirstChild("PlayerName")
                and creature.RootPart.TitanNameplate.InfoFrame.PlayerName.Text

            if playerNameText and playerNameText:find(currentPokemon) then
                -- Calculate the position to stop before the object
                local targetPosition = creature:GetPrimaryPartCFrame().Position
                local direction = (targetPosition - humanoidRootPart.Position).unit
                local stopPosition = targetPosition - direction * stopDistance

                -- Move character to the stop position facing the object
                humanoid:MoveTo(stopPosition)
                humanoid.MoveToFinished:Wait()  -- Wait until movement is finished

                if currentPokemon == pokemon then
                    -- Execute the taming code
                    tameCreature(creature.Name)
                else
                    -- Execute the attack code for Shadowclaw
                    attackShadowclaw(creature.Name)
                end

                task.wait(1)
                foundCreature = true
                checkAttempts = 0  -- Reset check attempts after a successful find
                fallbackAttempts = 0  -- Reset fallback attempts after a successful find
                break
            end
        end

        if not foundCreature then
            checkAttempts = checkAttempts + 1

            if usingFallback then
                fallbackAttempts = fallbackAttempts + 1

                if fallbackAttempts >= maxFallbackAttempts then
                    usingFallback = false  -- Switch back to original search
                    fallbackAttempts = 0  -- Reset fallback attempts
                end
            elseif checkAttempts >= maxCheckAttempts then
                usingFallback = true  -- Switch to fallback search
                checkAttempts = 0  -- Reset check attempts
            end

            task.wait(1)  -- Wait before checking again
        end
    end
end

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/miroeramaa/TurtleLib/main/TurtleUiLib.lua"))()
local window = library:Window("farm")

window:Toggle("find Moolet", false, function(bool)
    _G.auto2 = bool
    if _G.auto2 then
        task_defer(checkForMoolet)
    end
end)
window:Button("world 6 start", function() 
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    -- Define the target position
    local targetPosition = Vector3.new(876, 0, -479)
    -- Teleport the character to the target position
    humanoidRootPart.CFrame = CFrame.new(targetPosition) 
end)
window:Toggle("world 6", false, function(bool)
    _G.auto = bool
    task_defer(moveToAndInvoke(objectNames))
end)
window:Button("world 7 start", function() 
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    -- Define the target position
    local targetPosition = Vector3.new(1524, 0, -138) 
    -- Teleport the character to the target position
    humanoidRootPart.CFrame = CFrame.new(targetPosition)
end)

window:Toggle("world 7", false, function(bool)
    _G.auto = bool
    task_defer(moveToAndInvoke(objectNames2))
end)

window:Button("mundo 4 start", function() 
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    -- Define the target position
    local targetPosition = Vector3.new(788, 0, -2009) 
    -- Teleport the character to the target position
    humanoidRootPart.CFrame = CFrame.new(targetPosition)
end)

window:Toggle("world 4 iron", false, function(bool)
    _G.auto = bool
    task_defer(moveToAndInvoke(objectNames3))
end)

library:Keybind("P")
